---
source: crates/convert/tests/main.rs
expression: "String::from_utf8_lossy(&rust)"
---
// Generated by wasm2rs 0.1.0
macro_rules! wasm {
    ($vis:vis mod $module:ident use $(:: $embedder_start:ident ::)? $($embedder_more:ident)::+) => {

#[allow(non_snake_case)]
#[allow(dead_code)]
#[allow(unreachable_code)]
#[allow(unreachable_pub)]
$vis mod $module {
    use $(::$embedder_start::)? $($embedder_more)::+ as embedder;

    pub struct Allocated {
    }

    pub struct Instance {
        inst: Allocated,
    }

    impl Instance {

pub fn r#write_my_int(&self) -> ::core::result::Result<(), embedder::Trap> {
    embedder::rt::memory::i32_store::<0, u32, _, _>(&self._m, 0x0, 0x1F4i32, 0x41i32, None)?;
    Ok(())
}

pub fn r#read_my_int(&self) -> ::core::result::Result<i32, embedder::Trap> {
    Ok(embedder::rt::memory::i32_load::<0, u32, _, _>(&self._m, 0x0, 0x1F4i32, None)?)
}

pub fn r#out_of_bounds_read(&self) -> ::core::result::Result<i32, embedder::Trap> {
    Ok(embedder::rt::memory::i32_load::<0, u32, _, _>(&self._m, 0x0, 0x00010000i32, None)?)
}

    } // impl Instance
} // mod $module

    }
}
